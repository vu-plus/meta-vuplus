diff --git a/eglplatform.h b/eglplatform.h
index eaac469..a7bf9fe 100644
--- a/egl/EGL/eglplatform.h
+++ b/egl/EGL/eglplatform.h
@@ -36,6 +36,10 @@
 
 #include <KHR/khrplatform.h>
 
+#include "begl_memplatform.h"
+#include "begl_hwplatform.h"
+#include "begl_dispplatform.h"
+
 /* Macros used in EGL function prototype declarations.
  *
  * EGL functions should be prototyped as:
@@ -179,4 +183,40 @@ typedef khronos_int32_t EGLint;
 #define EGL_CAST(type, value) ((type) (value))
 #endif
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+/*
+The client application, or default platform library must register valid versions of each of these 
+interfaces before any EGL or GL functions are invoked, using the following functions provided by the 3D driver.
+*/
+typedef struct
+{
+   BEGL_MemoryInterface  *memInterface;      /* Memory interface which will called by the 3d driver   */
+   BEGL_HWInterface      *hwInterface;       /* Hardware interface which will be called by the driver */
+   BEGL_DisplayInterface *displayInterface;  /* Display interface which will be called by the driver  */
+
+   BEGL_DisplayCallbacks  displayCallbacks;  /* Callback pointers set by BEGL_GetDefaultDriverInterfaces, for client to call into driver */
+   BEGL_HardwareCallbacks hardwareCallbacks; /* Callback pointers set by BEGL_GetDefaultDriverInterfaces, for client to call into driver */
+
+   int hwInterfaceCloned;
+   int memInterfaceCloned;
+   void *memInterfaceFn;
+   void *hwInterfaceFn;
+} BEGL_DriverInterfaces;
+
+/* Register application level overrides for any or all of the abstract API calls made by the 3D driver. */
+EGLAPI void EGLAPIENTRY BEGL_RegisterDriverInterfaces(BEGL_DriverInterfaces *iface);
+
+/* Get a pointer to the registered driver interfaces, can be used to override partial defaults - see android platform layer(s) for example */
+EGLAPI BEGL_DriverInterfaces * BEGL_GetDriverInterfaces(void);
+
+/* Initializes all interfaces in the structure to NULL, fills out Callbacks with appropriate function pointers */
+EGLAPI void EGLAPIENTRY BEGL_GetDefaultDriverInterfaces(BEGL_DriverInterfaces *iface);
+
+#ifdef __cplusplus
+}
+#endif
+
 #endif /* __eglplatform_h */
